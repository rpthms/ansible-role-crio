---
- name: Ensure dependencies are installed.
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - gnupg2
      - curl
    state: present

- name: Include OS-specific variables
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_os_family == 'Debian'

- name: Check if the Kubic project apt key exists
  stat:
    path: "{{ kubic_apt_gpg_key_local_path }}"
  register: kubic_apt_key_stat

- name: Add the Kubic project apt key
  block:
    - name: Download the Kubic project apt key to a temporary file
      get_url:
        url: "{{ kubic_apt_gpg_key }}"
        dest: "{{ kubic_apt_gpg_key_local_path }}.tmp"
        owner: root
        group: root
        mode: 0644

    - name: Dearmor the downloaded GPG key
      shell: "cat {{ kubic_apt_gpg_key_local_path }}.tmp | gpg --dearmor > {{ kubic_apt_gpg_key_local_path }}"

    - name: Delete the temporary GPG key
      file:
        path: "{{ kubic_apt_gpg_key_local_path }}.tmp"
        state: absent
  when: not kubic_apt_key_stat.stat.exists

- name: Add Kubic project repository.
  apt_repository:
    repo: "{{ kubic_apt_repository }}"
    filename: "devel:kubic:libcontainers:stable"
    state: present
    update_cache: true

- name: Add CRI-O repository.
  apt_repository:
    repo: "{{ crio_apt_repository }}"
    filename: "devel:kubic:libcontainers:stable:cri-o"
    state: present
    update_cache: true

- name: Check if the Kubernetes apt key exists
  stat:
    path: "{{ kubernetes_apt_gpg_key_local_path }}"
  register: kubernetes_apt_key_stat

- name: Add the Kubernetes project apt key
  block:
    - name: Download the Kubernetes project apt key to a temporary file
      get_url:
        url: "{{ kubernetes_apt_gpg_key }}"
        dest: "{{ kubernetes_apt_gpg_key_local_path }}.tmp"
        owner: root
        group: root
        mode: 0644

    - name: Dearmor the downloaded GPG key
      shell: "cat {{ kubernetes_apt_gpg_key_local_path }}.tmp | gpg --dearmor > {{ kubernetes_apt_gpg_key_local_path }}"

    - name: Delete the temporary GPG key
      file:
        path: "{{ kubernetes_apt_gpg_key_local_path }}.tmp"
        state: absent
  when: not kubernetes_apt_key_stat.stat.exists

- name: Add Kubernetes repository.
  apt_repository:
    repo: "{{ kubernetes_apt_repository }}"
    state: present
    update_cache: true
